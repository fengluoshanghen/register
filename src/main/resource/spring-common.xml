<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
   ">
	
	<!-- 配置数据源 -->
	<!--<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl"></property>
		<property name="username" value="usermessage"></property>
		<property name="password" value="123456"></property>

	</bean> -->
	<bean id = "propertyConfigurer" class ="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" >
		<property name = "locations" >
			<list>
				<value>classpath:db.properties</value>
			</list>
		</property>
	</bean>

	<!-- 阿里 druid 数据库连接池 -->
	<bean id = "dataSource" class = "com.alibaba.druid.pool.DruidDataSource" destroy-method = "close" >
		<!-- 数据库基本信息配置 -->
		<property name = "url" value = "${url}" />
		<property name = "username" value = "${username}" />
		<property name = "password" value = "${password}" />
		<property name = "driverClassName" value = "${driverClassName}" />
		<property name = "filters" value = "${filters}" />

		<!-- 最大并发连接数 -->
		<property name = "maxActive" value = "${maxActive}" />

		<!-- 初始化连接数量 -->
		<property name = "initialSize" value = "${initialSize}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name = "maxWait" value = "${maxWait}" />

		<!-- 最小空闲连接数 -->
		<property name = "minIdle" value = "${minIdle}" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name = "timeBetweenEvictionRunsMillis" value ="${timeBetweenEvictionRunsMillis}" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name = "minEvictableIdleTimeMillis" value ="${minEvictableIdleTimeMillis}" />

		<property name = "validationQuery" value = "${validationQuery}" />
		<property name = "testWhileIdle" value = "${testWhileIdle}" />
		<property name = "testOnBorrow" value = "${testOnBorrow}" />
		<property name = "testOnReturn" value = "${testOnReturn}" />
		<property name = "maxOpenPreparedStatements" value ="${maxOpenPreparedStatements}" />

		<!-- 打开 removeAbandoned 功能 -->
		<property name = "removeAbandoned" value = "${removeAbandoned}" />

		<!-- 1800 秒，也就是 30 分钟 -->
		<property name = "removeAbandonedTimeout" value ="${removeAbandonedTimeout}" />

		<!-- 关闭 abanded 连接时输出错误日志 -->
		<property name = "logAbandoned" value = "${logAbandoned}" />
	</bean>
	
	<!-- 配置SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.demo.entity.User</value>
				<value>com.demo.entity.Person</value>
			</list>
		</property>
	</bean>
	
	<!-- 配置一个事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- 配置事务，使用代理的方式 -->
	<bean id="transactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" abstract="true">  
	    <property name="transactionManager" ref="transactionManager"></property>  
	    <property name="transactionAttributes">  
	        <props>  
	            <prop key="add*">PROPAGATION_REQUIRED,-Exception</prop>  
	            <prop key="modify*">PROPAGATION_REQUIRED,-myException</prop>  
	            <prop key="del*">PROPAGATION_REQUIRED</prop>  
	            <prop key="*">PROPAGATION_REQUIRED</prop>  
	        </props>  
	    </property>  
	</bean>

	<import resource="spring-beans.xml"/>
</beans>